#![feature(test)]

extern crate test;
use test::Bencher;
use big_numbers::int::Int;


#[bench]
fn add_bench(ben: &mut Bencher) {
    fn n_additions(a: &Int, b: &Int, n: i32) {
        for i in 0..n {
            a + b;
        }
    }
    let base = u64::pow(2, 32);
    let a = Int::from((10u64, base, "7799476601844501102305401045355421728095916034908428628939400533506264447916217201951091768726426832809611399717962665235527581632337561345565876731297655978330048122528263802617579145330884277033721126690740252033624739555953519007966677932275408332444814480393921564897483434863147266404177295193463673134437480524283120048813928094190619063565741597202240555527704710095322108654955875834323969699677552327931114764233304498189385946028900821614101043955147837273960959858693159104052474052545966294837656123236171926462333281375840609496630746170728210589622812491257705367200333695787186777592776972582151020517514520080936119044661448381097757958480213763680841284503840223740406573893741569197709449734029759408021750362837503105517427901877382919632472001817020899894169610976558724670463100453925758713343098561069387092297405305057074020945281273407933123649935700085015071973281079057640444207234665373090020261758098028152107297100313596611385516490635734090800357133290059024369672834651"));
    let b = Int::from((10u64, base, "8152891748253602119131371089999999999999990890987098709876154040472301394513503675608654013774430204059787999803413006130522112689031166228730492762875900641763739875027576519600453153566675868172934474404044880865929083839851459055056945515214576811017310862554462183085731581479225644257102348753881172739191172046174291735985389838059272067582544903699001362087104511977890826136023819219127651107446470992335265134910080235770288416981685513885327248631526481124432131375161421863550964954365246818296732708905840696947086728937141406735947329482481878993375980865139249680272735425755442281867547854665604217319034834129077372151411092432124137761182706991230489656335300586306039321188806180186533982963475630578336223469472633621301548750245158655504659900337780250449482653557625331784381402764711003294693111478572206050591389170225897606544620539576309978626088158482103436625629699372576954825266441872862919887878060880751228528222437696596710723855011432238735145062851237384011330979243794738537775744585905857746302"));

    ben.iter(|| n_additions(&a, &b, 100));
}

#[bench]
fn sub_bench(ben: &mut Bencher) {
    fn n_subs(a: &Int, b: &Int, n: i32) {
        for i in 0..n {
            a - b;
        }
    }
    let base = u64::pow(2, 32);
    let a = Int::from((10u64, base, "7799476601844501102305401045355421728095916034908428628939400533506264447916217201951091768726426832809611399717962665235527581632337561345565876731297655978330048122528263802617579145330884277033721126690740252033624739555953519007966677932275408332444814480393921564897483434863147266404177295193463673134437480524283120048813928094190619063565741597202240555527704710095322108654955875834323969699677552327931114764233304498189385946028900821614101043955147837273960959858693159104052474052545966294837656123236171926462333281375840609496630746170728210589622812491257705367200333695787186777592776972582151020517514520080936119044661448381097757958480213763680841284503840223740406573893741569197709449734029759408021750362837503105517427901877382919632472001817020899894169610976558724670463100453925758713343098561069387092297405305057074020945281273407933123649935700085015071973281079057640444207234665373090020261758098028152107297100313596611385516490635734090800357133290059024369672834651"));
    let b = Int::from((10u64, base, "8152891748253602119131371089999999999999990890987098709876154040472301394513503675608654013774430204059787999803413006130522112689031166228730492762875900641763739875027576519600453153566675868172934474404044880865929083839851459055056945515214576811017310862554462183085731581479225644257102348753881172739191172046174291735985389838059272067582544903699001362087104511977890826136023819219127651107446470992335265134910080235770288416981685513885327248631526481124432131375161421863550964954365246818296732708905840696947086728937141406735947329482481878993375980865139249680272735425755442281867547854665604217319034834129077372151411092432124137761182706991230489656335300586306039321188806180186533982963475630578336223469472633621301548750245158655504659900337780250449482653557625331784381402764711003294693111478572206050591389170225897606544620539576309978626088158482103436625629699372576954825266441872862919887878060880751228528222437696596710723855011432238735145062851237384011330979243794738537775744585905857746302"));

    ben.iter(|| n_subs(&a, &b, 100));
}


#[bench]
fn mul_bench(ben: &mut Bencher) {
    fn n_muls(a: &Int, b: &Int, n: i32) {
        for i in 0..n {
            a * b;
        }
    }
    let base = u64::pow(2, 32);
    let a = Int::from((10u64, base, "7799476601844501102305401045355421728095916034908428628939400533506264447916217201951091768726426832809611399717962665235527581632337561345565876731297655978330048122528263802617579145330884277033721126690740252033624739555953519007966677932275408332444814480393921564897483434863147266404177295193463673134437480524283120048813928094190619063565741597202240555527704710095322108654955875834323969699677552327931114764233304498189385946028900821614101043955147837273960959858693159104052474052545966294837656123236171926462333281375840609496630746170728210589622812491257705367200333695787186777592776972582151020517514520080936119044661448381097757958480213763680841284503840223740406573893741569197709449734029759408021750362837503105517427901877382919632472001817020899894169610976558724670463100453925758713343098561069387092297405305057074020945281273407933123649935700085015071973281079057640444207234665373090020261758098028152107297100313596611385516490635734090800357133290059024369672834651"));
    let b = Int::from((10u64, base, "8152891748253602119131371089999999999999990890987098709876154040472301394513503675608654013774430204059787999803413006130522112689031166228730492762875900641763739875027576519600453153566675868172934474404044880865929083839851459055056945515214576811017310862554462183085731581479225644257102348753881172739191172046174291735985389838059272067582544903699001362087104511977890826136023819219127651107446470992335265134910080235770288416981685513885327248631526481124432131375161421863550964954365246818296732708905840696947086728937141406735947329482481878993375980865139249680272735425755442281867547854665604217319034834129077372151411092432124137761182706991230489656335300586306039321188806180186533982963475630578336223469472633621301548750245158655504659900337780250449482653557625331784381402764711003294693111478572206050591389170225897606544620539576309978626088158482103436625629699372576954825266441872862919887878060880751228528222437696596710723855011432238735145062851237384011330979243794738537775744585905857746302"));

    ben.iter(|| n_muls(&a, &b, 100));
}

